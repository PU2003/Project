{"ast":null,"code":"var _jsxFileName = \"/home/user2/Desktop/TwitterFrontEnd/src/components/ValidatedInput/ValidatedTextInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { StyledInputBox, StyledInputLabel } from './StyledInput';\nimport { determineValidatedTextLabel } from '../../utils/DetermineStylesUtil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ValidatedTextInput = ({\n  valid,\n  name,\n  label,\n  changeValue,\n  data\n}) => {\n  _s();\n  const [value, setValue] = useState(data ? data : '');\n  const [borderActive, setBorderActive] = useState(false);\n  const [labelActive, setLabelActive] = useState(false);\n  const [color, setColor] = useState('gray');\n  const focus = () => {\n    setBorderActive(!borderActive);\n    if (!value) {\n      setLabelActive(!labelActive);\n    }\n  };\n  const update = e => {\n    setValue(e.target.value);\n    console.log(\"send the info back to the dispatcher\");\n    changeValue(e);\n  };\n  useEffect(() => {\n    if (value && !labelActive) {\n      setLabelActive(true);\n    }\n    setColor(determineValidatedTextLabel(borderActive, valid));\n  }, [valid, value, borderActive, labelActive, color]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"validated-text-input\",\n    children: /*#__PURE__*/_jsxDEV(StyledInputBox, {\n      active: borderActive,\n      valid: valid,\n      children: [/*#__PURE__*/_jsxDEV(StyledInputLabel, {\n        color: color,\n        active: labelActive,\n        valid: valid,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"valided-input-value\",\n        name: name,\n        onFocus: focus,\n        onBlur: focus,\n        onChange: update,\n        value: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ValidatedTextInput, \"at3C6cdcH1A5WIiE170a7Zsll4k=\");\n_c = ValidatedTextInput;\nexport default ValidatedTextInput;\nvar _c;\n$RefreshReg$(_c, \"ValidatedTextInput\");","map":{"version":3,"names":["React","useState","useEffect","StyledInputBox","StyledInputLabel","determineValidatedTextLabel","jsxDEV","_jsxDEV","ValidatedTextInput","valid","name","label","changeValue","data","_s","value","setValue","borderActive","setBorderActive","labelActive","setLabelActive","color","setColor","focus","update","e","target","console","log","className","children","active","fileName","_jsxFileName","lineNumber","columnNumber","onFocus","onBlur","onChange","_c","$RefreshReg$"],"sources":["/home/user2/Desktop/TwitterFrontEnd/src/components/ValidatedInput/ValidatedTextInput.tsx"],"sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { StyledInputBox, StyledInputLabel } from './StyledInput';\nimport { determineLabelColor, determineValidatedTextLabel } from '../../utils/DetermineStylesUtil';\n\ninterface ValidatedTextInputProps{\n   valid:boolean;\n   name:string;\n   label:string;\n   changeValue(e:React.ChangeEvent<HTMLInputElement>):void;\n   data?:string\n}\n\nexport const ValidatedTextInput:React.FC<ValidatedTextInputProps> = ({valid,name,label,changeValue,data}) => {\n\n  const[value,setValue] = useState<string>(data ? data : '');\n  const[borderActive,setBorderActive] = useState<boolean>(false);\n  const [labelActive,setLabelActive] = useState<boolean>(false);\n  const [color,setColor] = useState<string>('gray');\n\n  const focus = ():void => {\n     setBorderActive(!borderActive);\n     if(!value){\n         setLabelActive(!labelActive);\n     }\n  }\n\n  const update = (e:React.ChangeEvent<HTMLInputElement>):void => {\n     setValue(e.target.value);\n     console.log(\"send the info back to the dispatcher\");\n     changeValue(e);\n     \n  }\n\n  useEffect(() => {\n\n    if(value && !labelActive){\n        setLabelActive(true);\n    }\n\n    setColor(determineValidatedTextLabel(borderActive,valid));\n\n  },[valid,value,borderActive,labelActive,color])\n\n  return (\n    <div className='validated-text-input'>\n        <StyledInputBox active = {borderActive} valid = {valid}>\n            <StyledInputLabel color={color} active = {labelActive}\n               valid={valid}>{label}</StyledInputLabel>\n       \n            <input className='valided-input-value'\n               name={name}\n               onFocus={focus}\n               onBlur={focus}\n               onChange={update}\n               value={data}\n            />\n       </StyledInputBox>\n    </div>\n  )\n}\n \nexport default ValidatedTextInput\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,eAAe;AAChE,SAA8BC,2BAA2B,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUnG,OAAO,MAAMC,kBAAoD,GAAGA,CAAC;EAACC,KAAK;EAACC,IAAI;EAACC,KAAK;EAACC,WAAW;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAE3G,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGf,QAAQ,CAASY,IAAI,GAAGA,IAAI,GAAG,EAAE,CAAC;EAC1D,MAAK,CAACI,YAAY,EAACC,eAAe,CAAC,GAAGjB,QAAQ,CAAU,KAAK,CAAC;EAC9D,MAAM,CAACkB,WAAW,EAACC,cAAc,CAAC,GAAGnB,QAAQ,CAAU,KAAK,CAAC;EAC7D,MAAM,CAACoB,KAAK,EAACC,QAAQ,CAAC,GAAGrB,QAAQ,CAAS,MAAM,CAAC;EAEjD,MAAMsB,KAAK,GAAGA,CAAA,KAAW;IACtBL,eAAe,CAAC,CAACD,YAAY,CAAC;IAC9B,IAAG,CAACF,KAAK,EAAC;MACNK,cAAc,CAAC,CAACD,WAAW,CAAC;IAChC;EACH,CAAC;EAED,MAAMK,MAAM,GAAIC,CAAqC,IAAU;IAC5DT,QAAQ,CAACS,CAAC,CAACC,MAAM,CAACX,KAAK,CAAC;IACxBY,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;IACnDhB,WAAW,CAACa,CAAC,CAAC;EAEjB,CAAC;EAEDvB,SAAS,CAAC,MAAM;IAEd,IAAGa,KAAK,IAAI,CAACI,WAAW,EAAC;MACrBC,cAAc,CAAC,IAAI,CAAC;IACxB;IAEAE,QAAQ,CAACjB,2BAA2B,CAACY,YAAY,EAACR,KAAK,CAAC,CAAC;EAE3D,CAAC,EAAC,CAACA,KAAK,EAACM,KAAK,EAACE,YAAY,EAACE,WAAW,EAACE,KAAK,CAAC,CAAC;EAE/C,oBACEd,OAAA;IAAKsB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACjCvB,OAAA,CAACJ,cAAc;MAAC4B,MAAM,EAAId,YAAa;MAACR,KAAK,EAAIA,KAAM;MAAAqB,QAAA,gBACnDvB,OAAA,CAACH,gBAAgB;QAACiB,KAAK,EAAEA,KAAM;QAACU,MAAM,EAAIZ,WAAY;QACnDV,KAAK,EAAEA,KAAM;QAAAqB,QAAA,EAAEnB;MAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAAC,eAE3C5B,OAAA;QAAOsB,SAAS,EAAC,qBAAqB;QACnCnB,IAAI,EAAEA,IAAK;QACX0B,OAAO,EAAEb,KAAM;QACfc,MAAM,EAAEd,KAAM;QACde,QAAQ,EAAEd,MAAO;QACjBT,KAAK,EAAEF;MAAK;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAAArB,EAAA,CA/CYN,kBAAoD;AAAA+B,EAAA,GAApD/B,kBAAoD;AAiDjE,eAAeA,kBAAkB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}