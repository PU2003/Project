{"ast":null,"code":"export const determineStyledInputBorder = props => {\n  let {\n    active,\n    valid,\n    theme\n  } = props;\n  if (!active && valid) {\n    return `1px solid ${theme.colors.lightGray}`;\n  }\n  if (!active && !valid) {\n    return `1px solid ${theme.colors.error}`;\n  }\n  if (active && valid) {\n    return `2px solid ${theme.colors.blue}`;\n  }\n  if (active && !valid) {\n    return `2px solid ${theme.colors.error}`;\n  }\n  return \"\";\n};\nexport const determineLabelColor = props => {\n  let {\n    active,\n    valid,\n    theme,\n    color\n  } = props;\n  if (color && color === 'error') {\n    return theme.colors.error;\n  }\n  if (color && color === 'blue') {\n    return theme.colors.blue;\n  }\n  return theme.colors.gray;\n};\nexport const determineValidatedStyles = (state, validator) => {\n  let {\n    valid,\n    active,\n    typedIn,\n    value,\n    labelColor,\n    labelActive\n  } = state;\n  if (typedIn) {\n    valid = validator(value);\n    if (active && valid) {\n      labelActive = true;\n      labelColor = 'blue';\n    }\n    if (active && !valid) {\n      labelActive = true;\n      labelColor = 'error';\n    }\n    if (!active && valid) {\n      labelActive = true;\n      labelColor = 'gray';\n    }\n    if (!active && !valid) {\n      labelActive = false;\n      labelColor = 'gray';\n    }\n  } else {\n    if (active) {\n      labelActive = true;\n      labelColor = 'blue';\n    } else {\n      labelActive = false;\n      labelColor = 'gray';\n    }\n  }\n  state = {\n    ...state,\n    valid,\n    labelActive,\n    labelColor\n  };\n  return state;\n};\nexport const determineValidedSelectStyle = (active, valid) => {\n  if (!valid) {\n    return \"error\";\n  }\n  if (active) {\n    return \"blue\";\n  }\n  return \"gray\";\n};\nexport const determineValidatedTextLabel = (active, valid) => {\n  if (!valid && active) {\n    return 'error';\n  }\n  if (valid && active) {\n    return 'blue';\n  }\n  return 'gray';\n};","map":{"version":3,"names":["determineStyledInputBorder","props","active","valid","theme","colors","lightGray","error","blue","determineLabelColor","color","gray","determineValidatedStyles","state","validator","typedIn","value","labelColor","labelActive","determineValidedSelectStyle","determineValidatedTextLabel"],"sources":["/home/user2/Desktop/TwitterFrontEnd/src/utils/DetermineStylesUtil.tsx"],"sourcesContent":["import { StyledInputProps, ValidatedInputState } from \"./GlobalInterfaces\";\n\nexport const determineStyledInputBorder = (props: StyledInputProps): string => {\n    let { active, valid, theme } = props;\n\n    if (!active && valid) {\n        return `1px solid ${theme.colors.lightGray}`;\n    }\n\n    if (!active && !valid) {\n        return `1px solid ${theme.colors.error}`;\n    }\n\n    if (active && valid) {\n        return `2px solid ${theme.colors.blue}`;\n    }\n\n    if (active && !valid) {\n        return `2px solid ${theme.colors.error}`;\n    }\n\n    return \"\";\n}\n\nexport const determineLabelColor = (props: StyledInputProps): string => {\n    let { active, valid, theme, color } = props;\n\n    if (color && color === 'error') {\n        return theme.colors.error;\n    }\n\n    if (color && color === 'blue') {\n        return theme.colors.blue;\n    }\n\n    return theme.colors.gray;\n}\n\nexport const determineValidatedStyles = (state:ValidatedInputState,validator:(value:string) => boolean ):ValidatedInputState => {\n  \n    let{valid,active,typedIn,value,labelColor,labelActive} = state;\n\n    if(typedIn){\n        valid = validator(value);\n\n        if(active && valid){\n            labelActive = true;\n            labelColor = 'blue';\n        }\n\n        if(active && !valid){\n            labelActive = true;\n            labelColor = 'error';\n        }\n\n        if(!active && valid){\n            labelActive = true;\n            labelColor = 'gray';\n        }\n\n        if(!active && !valid){\n            labelActive = false;\n            labelColor = 'gray';\n        }\n    } else{\n\n        if(active){\n            labelActive = true;\n            labelColor = 'blue';\n\n        } else{\n            labelActive = false;\n            labelColor = 'gray';\n        }\n    }\n\n    state = {\n        ...state,\n        valid,\n        labelActive,\n        labelColor\n    };\n\n    return state;\n}\n\nexport const determineValidedSelectStyle = (active:boolean,valid:boolean):string => {\n    if(!valid){\n        return \"error\";\n    }\n    if(active){\n        return \"blue\";\n    }\n\n    return \"gray\";\n}\n\nexport const determineValidatedTextLabel = (active:boolean,valid:boolean):string =>{\n    if(!valid && active ){\n        return 'error';\n    }\n\n    if(valid && active ){\n        return 'blue';\n    }\n\n    return 'gray';\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}