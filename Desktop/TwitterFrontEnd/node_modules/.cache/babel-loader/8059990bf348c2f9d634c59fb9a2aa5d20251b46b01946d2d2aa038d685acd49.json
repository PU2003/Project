{"ast":null,"code":"var _jsxFileName = \"/home/user2/Desktop/TwitterFrontEnd/src/features/register/components/RegisterDateInput/RegisterDateInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ValidatedDateSelector } from '../../../../components/ValidatedInput/ValidatedDateSelector';\nimport { getMonths, getDays, getYears } from '../../../../utils/DateUtils';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateRegister } from '../../../../redux/slice/RegisterSlice';\nimport { validateDob } from '../../../../services/Validators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterDateInput = ({\n  date\n}) => {\n  _s();\n  const state = useSelector(state => state.register);\n  const dispatch = useDispatch();\n  const [valid, setValid] = useState(true);\n  const updateState = (name, value) => {\n    dispatch(updateRegister({\n      name,\n      value\n    }));\n  };\n  useEffect(() => {\n    let {\n      day,\n      month,\n      year\n    } = state.dob;\n    if (day && month && year) {\n      setValid(validateDob({\n        month,\n        day,\n        year\n      }));\n    }\n    dispatch(updateRegister({\n      name: 'dobValid',\n      value: valid\n    }));\n  }, [state.dob.day, state.dob.month, state.dob.year, state.dobValid, valid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-date\",\n    children: [/*#__PURE__*/_jsxDEV(ValidatedDateSelector, {\n      style: \"validated-month\",\n      valid: valid,\n      name: \"Month\",\n      dropDown: getMonths,\n      dispatcher: updateState,\n      data: date.month\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ValidatedDateSelector, {\n      style: \"validated-day\",\n      valid: valid,\n      name: \"Day\",\n      dropDown: getDays,\n      dispatcher: updateState,\n      data: date.day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ValidatedDateSelector, {\n      style: \"validated-year\",\n      valid: valid,\n      name: \"Year\",\n      dropDown: getYears,\n      dispatcher: updateState,\n      data: date.year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterDateInput, \"bHq6nO3VSARmPezMiQyFRpW2ff0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = RegisterDateInput;\nvar _c;\n$RefreshReg$(_c, \"RegisterDateInput\");","map":{"version":3,"names":["React","useState","useEffect","ValidatedDateSelector","getMonths","getDays","getYears","useDispatch","useSelector","updateRegister","validateDob","jsxDEV","_jsxDEV","RegisterDateInput","date","_s","state","register","dispatch","valid","setValid","updateState","name","value","day","month","year","dob","dobValid","className","children","style","dropDown","dispatcher","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user2/Desktop/TwitterFrontEnd/src/features/register/components/RegisterDateInput/RegisterDateInput.tsx"],"sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { ValidatedDateSelector } from '../../../../components/ValidatedInput/ValidatedDateSelector';\nimport { getMonths,getDays,getYears } from '../../../../utils/DateUtils';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../../../../redux/Store';\nimport { updateRegister } from '../../../../redux/slice/RegisterSlice';\nimport { validateDob } from '../../../../services/Validators';\nimport { Dob } from '../../../../utils/GlobalInterfaces';\n\ninterface RegisterDateInputProps{\n    date:Dob\n}\n\nexport const RegisterDateInput:React.FC<RegisterDateInputProps> = ({date}) => {\n\n  const state = useSelector((state:RootState) => state.register);  \n  const dispatch:AppDispatch = useDispatch();\n\n  const [valid,setValid] = useState(true);\n\n  const updateState = (name:string,value:string|number|boolean): void => {\n      dispatch(updateRegister({\n         name,\n         value\n      }));\n  }\n\n  useEffect(() => {\n\n    let {day,month,year} = state.dob;\n\n    if(day && month && year){\n        setValid(validateDob({\n            month,\n            day,\n            year\n        }));\n    }\n\n    dispatch(updateRegister({name:'dobValid',value:valid}));\n\n  },[state.dob.day,state.dob.month,state.dob.year,state.dobValid,valid]);\n\n  return ( \n    <div className='register-date'>\n        <ValidatedDateSelector\n            style = {\"validated-month\"}\n            valid = {valid}\n            name={\"Month\"}\n            dropDown={getMonths}\n            dispatcher={updateState}\n            data={date.month}\n        />\n\n        <ValidatedDateSelector\n            style = {\"validated-day\"}\n            valid = {valid}\n            name={\"Day\"}\n            dropDown={getDays}\n            dispatcher={updateState}\n            data={date.day}\n        />\n\n        <ValidatedDateSelector\n            style = {\"validated-year\"}\n            valid = {valid}\n            name={\"Year\"}\n            dropDown={getYears}\n            dispatcher={updateState}\n            data={date.year}\n        />\n      \n    </div>\n  );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}