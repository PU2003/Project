{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nconst initialState = {\n  loading: false,\n  error: false,\n  firstName: '',\n  firstNameValid: false,\n  lastName: '',\n  lastNameValid: false,\n  email: '',\n  emailValid: false,\n  dob: {\n    month: 0,\n    day: 0,\n    year: 0\n  },\n  dobValid: false,\n  step: 1,\n  username: \"\"\n};\nexport const registerUser = createAsyncThunk('register/register', async (user, thunkAPI) => {\n  try {\n    const req = await axios.post('http://localhost:8081/auth/register', user);\n    return await req.data;\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e);\n  }\n});\nexport const updateUserPhone = createAsyncThunk('register/phone', async (body, thunkAPI) => {\n  try {\n    const req = await axios.put('http://localhost:8081/auth/update/phone', body);\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e);\n  }\n});\nexport const RegisterSlice = createSlice({\n  name: \"register\",\n  initialState,\n  reducers: {\n    updateRegister(state, action) {\n      let {\n        name,\n        value\n      } = action.payload;\n      if (name === 'month' || name === 'day' || name === 'year') {\n        let dob = state.dob;\n        dob = {\n          ...dob,\n          [name]: value\n        };\n        state = {\n          ...state,\n          dob\n        };\n      } else {\n        state = {\n          ...state,\n          [name]: value\n        };\n      }\n      console.log('Updating the global register state: ', state);\n      return state;\n    },\n    incrementStep(state) {\n      state.step++;\n      return state;\n    },\n    decrementStep(state) {\n      if (state.step === 1 || state.step === 4 || state.step >= 6) {\n        return state;\n      } else {\n        state.step--;\n        return state;\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, (state, action) => {\n      state.loading = true;\n      return state;\n    });\n    builder.addCase(updateUserPhone.pending, (state, action) => {\n      state = {\n        ...state,\n        loading: true\n      };\n      return state;\n    });\n    builder.addCase(registerUser.fulfilled, (state, action) => {\n      let nextStep = state.step + 1;\n      state = {\n        ...state,\n        username: action.payload.username,\n        loading: false,\n        error: false,\n        step: nextStep\n      };\n      return state;\n    });\n    builder.addCase(updateUserPhone.fulfilled, (state, action) => {\n      let nextStep = state.step + 1;\n      state = {\n        ...state,\n        loading: false,\n        error: false,\n        step: nextStep\n      };\n      return state;\n    });\n    builder.addCase(registerUser.rejected, (state, action) => {\n      state.error = true;\n      state.loading = false;\n      return state;\n    });\n    builder.addCase(updateUserPhone.rejected, (state, action) => {\n      state = {\n        ...state,\n        loading: false,\n        error: true\n      };\n      return state;\n    });\n  }\n});\nexport const {\n  updateRegister,\n  incrementStep,\n  decrementStep\n} = RegisterSlice.actions;\nexport default RegisterSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","loading","error","firstName","firstNameValid","lastName","lastNameValid","email","emailValid","dob","month","day","year","dobValid","step","username","registerUser","user","thunkAPI","req","post","data","e","rejectWithValue","updateUserPhone","body","put","RegisterSlice","name","reducers","updateRegister","state","action","value","payload","console","log","incrementStep","decrementStep","extraReducers","builder","addCase","pending","fulfilled","nextStep","rejected","actions","reducer"],"sources":["/home/user2/Desktop/TwitterFrontEnd/src/redux/slice/RegisterSlice.ts"],"sourcesContent":["import { createAsyncThunk,createSlice,PayloadAction } from \"@reduxjs/toolkit\";\nimport { Dob } from \"../../utils/GlobalInterfaces\";\nimport axios from 'axios';   \n\ninterface RegisterSliceState{\n    loading:boolean;\n     error:boolean;\n     firstName:string;\n     firstNameValid:boolean;\n     lastName:string;\n     lastNameValid:boolean;\n     email:string;\n     emailValid:boolean;\n     dob:Dob;\n     dobValid:boolean;\n     step:number;\n     username:string;\n}\n\ninterface UpdatePayload{\n    name:string;\n    value:string | number | boolean;\n}\n\ninterface RegisterUser{\n    firstName:string;\n    lastName:string;\n    email:string;\n    dob:string;\n}\n\ninterface UpdatePhone{\n    username:string;\n    phone:string; \n}\n\nconst initialState:RegisterSliceState = {\n    loading:false,\n    error:false,\n    firstName:'',\n    firstNameValid:false,\n    lastName:'',\n    lastNameValid:false,\n    email:'',\n    emailValid:false,\n    dob:{\n       month:0,\n       day:0,\n       year:0\n    },\n    dobValid:false,\n    step:1,\n    username:\"\"\n}\n\nexport const registerUser = createAsyncThunk(\n    'register/register',\n     async (user:RegisterUser,thunkAPI) => {\n        try{\n            const req = await axios.post('http://localhost:8081/auth/register',user);\n            return await req.data;\n        } catch(e){\n            return thunkAPI.rejectWithValue(e);\n         }\n     }\n)\n\nexport const updateUserPhone = createAsyncThunk(\n    'register/phone',\n    async(body:UpdatePhone,thunkAPI) => {\n        try{\n          const req  = await axios.put('http://localhost:8081/auth/update/phone',body);\n        } catch(e){\n            return thunkAPI.rejectWithValue(e);\n        }\n    }\n)\n\nexport const RegisterSlice = createSlice({\n    name:\"register\",\n    initialState,\n    reducers:{\n        updateRegister(state,action:PayloadAction<UpdatePayload>){\n             let {name,value} = action.payload;\n\n             if(name === 'month' || name === 'day' || name === 'year' ){\n                let dob = state.dob;\n\n                dob = {\n                    ...dob,\n                    [name]:value\n                }\n\n                state = {\n                    ...state,\n                    dob\n                };\n             } else {\n                 state = {\n                    ...state,\n                    [name]:value\n                 }\n             }\n\n             console.log('Updating the global register state: ',state);\n\n             return state;\n        },\n      \n        incrementStep(state){\n            state.step++;\n            return state;\n        },\n\n        decrementStep(state){\n            if(state.step === 1 || state.step === 4 || state.step >= 6){\n                 return state;\n            } else{\n                state.step--;\n                return state;\n            }\n        }\n    },\n    extraReducers:(builder) => {\n        builder.addCase(registerUser.pending,(state,action) => {\n            state.loading=true;\n            return state;\n        });\n\n        builder.addCase(updateUserPhone.pending,(state,action) => {\n            state = {\n                ...state,\n                loading:true\n            }\n            \n            return state;\n        });\n\n        builder.addCase(registerUser.fulfilled,(state,action) => {\n            let nextStep = state.step+ 1;\n            state = {\n                ...state,\n                username:action.payload.username,\n                loading:false,\n                error:false,\n                step:nextStep\n            }\n            return state;\n        });\n\n        builder.addCase(updateUserPhone.fulfilled,(state,action) => {\n            let nextStep = state.step + 1;\n            state = {\n                ...state,\n                loading:false,\n                error:false,\n                step:nextStep\n            }\n            return state;\n        });\n\n        builder.addCase(registerUser.rejected,(state,action) => {\n            state.error = true;\n            state.loading = false;\n            return state;\n        });\n\n        builder.addCase(updateUserPhone.rejected,(state,action) => {\n            state = {\n                ...state,\n                loading:false,\n                error:true\n            }\n            return state;\n        });\n    },\n});\n\nexport const {updateRegister,incrementStep,decrementStep} = RegisterSlice.actions;\n\nexport default RegisterSlice.reducer;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}