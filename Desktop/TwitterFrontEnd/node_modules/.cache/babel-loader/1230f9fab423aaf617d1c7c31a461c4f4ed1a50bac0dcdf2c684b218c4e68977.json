{"ast":null,"code":"var _jsxFileName = \"/home/user2/Desktop/TwitterFrontEnd/src/features/register/components/RegisterNameInput/RegisterNameInputs.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ValidatedTextInput from '../../../../components/ValidatedInput/ValidatedTextInput';\nimport { useDispatch } from 'react-redux';\nimport { updateRegister } from '../../../../redux/slice/RegisterSlice';\nimport { validateName } from '../../../../services/Validators';\nimport \"./RegisterNameInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RegisterNameInputs = ({\n  firstName,\n  lastName\n}) => {\n  _s();\n  const [firstValid, setFirstValid] = useState(true);\n  const [lastValid, setLastValid] = useState(true);\n  const dispatch = useDispatch();\n  const updateName = e => {\n    if (e.target.name === 'firstName') {\n      dispatch(updateRegister({\n        name: e.target.name,\n        value: e.target.value\n      }));\n      let valid = validateName(e.target.value);\n      setFirstValid(valid);\n      dispatch(updateRegister({\n        name: 'firstNameValid',\n        value: valid\n      }));\n    }\n    if (e.target.name === 'lastName') {\n      dispatch(updateRegister({\n        name: e.target.name,\n        value: e.target.value\n      }));\n      let valid = validateName(e.target.value);\n      setLastValid(valid);\n      dispatch(updateRegister({\n        name: 'lastNameValid',\n        value: valid\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-name-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-name-content\",\n      children: [/*#__PURE__*/_jsxDEV(ValidatedTextInput, {\n        valid: firstValid,\n        name: \"firstName\",\n        label: \"First\",\n        changeValue: updateName,\n        data: firstName,\n        attributes: {\n          maxLength: 50\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this), firstValid ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"register-name-error\",\n        children: \" What's your name? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-name-content\",\n      children: [/*#__PURE__*/_jsxDEV(ValidatedTextInput, {\n        valid: lastValid,\n        name: \"lastName\",\n        label: \"Last\",\n        changeValue: updateName,\n        data: lastName,\n        attributes: {\n          maxLength: 50\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }, this), lastValid ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"register-name-error\",\n        children: \" What's your name? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterNameInputs, \"w3maN2w/hcoEl814WZtfZgcm7Gc=\", false, function () {\n  return [useDispatch];\n});\n_c = RegisterNameInputs;\nvar _c;\n$RefreshReg$(_c, \"RegisterNameInputs\");","map":{"version":3,"names":["React","useState","ValidatedTextInput","useDispatch","updateRegister","validateName","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterNameInputs","firstName","lastName","_s","firstValid","setFirstValid","lastValid","setLastValid","dispatch","updateName","e","target","name","value","valid","className","children","label","changeValue","data","attributes","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user2/Desktop/TwitterFrontEnd/src/features/register/components/RegisterNameInput/RegisterNameInputs.tsx"],"sourcesContent":["import React,{useState} from 'react'\nimport ValidatedTextInput from '../../../../components/ValidatedInput/ValidatedTextInput'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../../../redux/Store';\nimport { updateRegister } from '../../../../redux/slice/RegisterSlice';\nimport { validateName } from '../../../../services/Validators';\nimport \"./RegisterNameInput.css\"\n\ninterface RegisterNameInputProps{\n   firstName:string;\n   lastName:string;\n\n}\n\nexport const RegisterNameInputs:React.FC<RegisterNameInputProps> = ({firstName,lastName}) => {\n\n  const [firstValid,setFirstValid] = useState<boolean>(true);\n  const [lastValid,setLastValid] = useState<boolean>(true);\n\n  const dispatch:AppDispatch = useDispatch();\n  \n  const updateName = (e:React.ChangeEvent<HTMLInputElement>):void => {\n\n      if(e.target.name === 'firstName'){\n         dispatch(updateRegister({name:e.target.name, value:e.target.value}));\n\n         let valid = validateName(e.target.value);\n         setFirstValid(valid);\n\n         dispatch(updateRegister({name:'firstNameValid',value:valid}));\n      }\n\n      if(e.target.name === 'lastName'){\n        dispatch(updateRegister({name:e.target.name, value:e.target.value}));\n\n        let valid = validateName(e.target.value);\n        setLastValid(valid);\n\n        dispatch(updateRegister({name:'lastNameValid',value:valid}));\n     }\n  }\n\n  return (\n    <div className='register-name-input'>\n      <div className='register-name-content'>\n         <ValidatedTextInput \n            valid={firstValid} \n            name={\"firstName\"} \n            label={\"First\"} \n            changeValue={updateName} \n            data={firstName}\n            attributes={{\n                maxLength:50\n            }}\n            />\n            \n         {firstValid ? <></> : <span className = 'register-name-error'> What's your name? </span>}\n      </div>\n      <div className='register-name-content'>\n         <ValidatedTextInput\n             valid={lastValid} \n             name={\"lastName\"} \n             label={\"Last\"} \n             changeValue={updateName} \n             data={lastName}\n             attributes={{\n                 maxLength:50\n             }}\n             />\n         {lastValid ? <></> : <span className = 'register-name-error'> What's your name? </span>}\n      </div>\n    </div>\n  )\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}